@page "/"
@using ToDoWebApp.Models
@using ToDoWebApp.Services
@inject TodoService TodoService
@inject NavigationManager NavManager

<PageTitle>TODO LIST</PageTitle>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">My TODO List</h1>
        <a href="/create-todo" class="btn btn-primary">Add New TODO</a>
    </div>

    @if (todoItems == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!todoItems.Any())
    {
        <div class="alert alert-info" role="alert">
            You do not have any TODO Items <a href="/create-todo">Try Add New Todo</a>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Status</th>
                        <th>Category</th>
                        <th>Description</th>
                        <th>Created At</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in todoItems)
                    {
                        <tr>
                            <td>
                                <span class="badge @(item.Status == "Done" ? "bg-success" : "bg-warning text-dark")">
                                    @item.Status
                                </span>
                            </td>
                            <td><span class="badge bg-info text-dark">@item.Category</span></td>
                            <td class="@(item.Status == "Done" ? "text-muted text-decoration-line-through" : "")">
                                @item.Description
                            </td>
                            <td>@item.CreatedAt.ToShortDateString()</td>
                            <td>
                                @if (item.Status == "WIP")
                                {
                                    <button class="btn btn-sm btn-outline-success me-1" @onclick="() => MarkAsDone(item.Id)">완료</button>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-outline-warning me-1" @onclick="() => MarkAsWip(item.Id)">미완료</button>
                                }
                                <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteTodo(item.Id)">삭제</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private List<TodoItem>? todoItems;

    protected override async Task OnInitializedAsync()
    {
        await RefreshTodos();
    }

    private async Task MarkAsDone(Guid id)
    {
        await TodoService.UpdateTodoItemStatusAsync(id, "Done");
        await RefreshTodos();
    }

    private async Task MarkAsWip(Guid id)
    {
        await TodoService.UpdateTodoItemStatusAsync(id, "WIP");
        await RefreshTodos();
    }

    private async Task DeleteTodo(Guid id)
    {
        await TodoService.DeleteTodoItemAsync(id);
        await RefreshTodos();
    }

    private async Task RefreshTodos()
    {
        todoItems = await TodoService.GetTodoItemsAsync();
        StateHasChanged();
    }
}