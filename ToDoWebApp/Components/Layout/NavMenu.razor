@using ToDoWebApp.Services
@inject AuthService AuthService
@inject NavigationManager Navigation
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ToDoWebApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="CollapseNavMenu">
    <nav class="flex-column">

        @if (AuthService.IsLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="todolist" Match="NavLinkMatch.All">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> My Tasks
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <button class="nav-link btn btn-link text-start w-100" @onclick="HandleLogout">
                    <span class="bi bi-box-arrow-right-nav-menu" aria-hidden="true"></span> Logout
                </button>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="signup">
                    <span class="bi bi-person-plus-nav-menu" aria-hidden="true"></span> Sign Up
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool _collapseNavMenu = true;
    private bool _isLoggingOut = false;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        AuthService.OnAuthStateChanged += StateHasChanged;
    }

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }

    private void CollapseNavMenu()
    {
        _collapseNavMenu = true;
    }

    private async Task HandleLogout()
    {
        if (_isLoggingOut) return;

        _isLoggingOut = true;
        StateHasChanged();

        try
        {
            await AuthService.SignOut();
        }
        catch (Exception)
        {
            // SignOut method in AuthService already handles errors and navigation
        }
        finally
        {
            _isLoggingOut = false;
        }
    }

    public void Dispose()
    {
        AuthService.OnAuthStateChanged -= StateHasChanged;
    }

}
